local args = { ... }
length = 20 -- size of the farm
height = 6
ttl = 5 -- seconds
dir = args[1] -- strafe direction, 1 = right; 0 = left

-- print("This is a test.."..dir+1)
dir = dir * 1

function H()
turtle.turnLeft()
turtle.dig()
turtle.turnLeft()
turtle.digUp()
turtle.up()
turtle.dig()
turtle.forward()
turtle.turnLeft()
turtle.turnLeft()

k = 1
while k < height do

if turtle.detect() then
turtle.dig()
end

if k < (height-1) then
if not turtle.up() then
turtle.digUp()
end
end

--if turtle.detect() then
--turtle.dig()
--end

k = k + 1
end

turtle.dig()
turtle.forward()

k = 2
while k < height do

if turtle.detect() then
turtle.dig()
end

if not turtle.down() then
turtle.digDown()
end

if turtle.detect() then
turtle.dig()
end

k = k + 1
end

turtle.down()
turtle.dig()

if turtle.getItemCount(1) > 1 then
turtle.select(1)
turtle.place()
end

end

function SCK()
  turtle.suck()
  turtle.suckUp()
end

function SCKD()
  turtle.suckDown()
end

function S()
  re = "nix"
  SCK()

  turtle.select(1)
  if turtle.compare() then
    re = "sapling"
  end
  
  turtle.select(2)
  if turtle.compare() then
    re = "wood"
  end
  return re
end

function RF()
SCK()
turtle.select(16)
turtle.refuel()
turtle.select(1)
end

function R()
f = 0
SCK()
if dir == 0 then
turtle.turnRight()
elseif dir == 1 then
turtle.turnLeft()
end

while f < length do
turtle.attack()
SCK()
turtle.forward()
print("fleeing fwd")
--turtle.attack()
--SCK()
f = f + 1
end

if dir == 1 then
turtle.turnRight()
elseif dir == 0 then
turtle.turnLeft()
end
SCK()
end

function M()
SCK()
if dir == 0 then
  turtle.turnLeft()
  SCK()
  if not turtle.forward() then
    turtle.turnRight()
    SCK()
    return false
  end
  turtle.turnRight()
  SCK()
  
  if dir == 1 then
    turtle.turnRight()
    SCK()
    if not turtle.forward() then
      turtle.turnLeft()
      SCK()
      return false
    end
    turtle.turnLeft()
    SCK()
  end
  return true
end

RF()

q = 0
s = ""

while true do
print(S())

q = 0
while q < length do
SCK()
if not M() then
print("return to start because move failed :/")
  R() -- return to start
  q = 0
end

s = S() -- S()can what is infront and write to 's'
print(s)

if s == "nix" and turtle.getItemCount(1) > 1 then
  turtle.select(1)
  turtle.place()
end

if s == "wood" then
H()
SCK()
end

s = ""
q = q + 1

end
sleep(6)
end


print("Kein Sprit!")
